{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "tcp_hosts": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "the logical name of the tcp host. names must be unique for each tcp host within a listener"
                    },
                    "ssl_config": {
                        "properties": {
                            "secret_ref": {
                                "$ref": "#/definitions/core.solo.io.ResourceRef",
                                "additionalProperties": true,
                                "description": "SecretRef contains the secret ref to a gloo tls secret or a kubernetes tls secret.\n gloo tls secret can contain a root ca as well if verification is needed."
                            },
                            "ssl_files": {
                                "properties": {
                                    "tls_cert": {
                                        "type": "string"
                                    },
                                    "tls_key": {
                                        "type": "string"
                                    },
                                    "root_ca": {
                                        "type": "string",
                                        "description": "for client cert validation. optional"
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "SSLFiles reference paths to certificates which are local to the proxy"
                            },
                            "sds": {
                                "properties": {
                                    "target_uri": {
                                        "type": "string",
                                        "description": "Target uri for the sds channel. currently only a unix domain socket is supported."
                                    },
                                    "call_credentials": {
                                        "properties": {
                                            "file_credential_source": {
                                                "properties": {
                                                    "token_file_name": {
                                                        "type": "string",
                                                        "description": "File containing auth token."
                                                    },
                                                    "header": {
                                                        "type": "string",
                                                        "description": "Header to carry the token."
                                                    }
                                                },
                                                "additionalProperties": true,
                                                "type": "object",
                                                "description": "Call credentials are coming from a file,"
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "Call credentials."
                                    },
                                    "cluster_name": {
                                        "type": "string",
                                        "description": "The name of the sds cluster in envoy"
                                    },
                                    "certificates_secret_name": {
                                        "type": "string",
                                        "description": "The name of the secret containing the certificate"
                                    },
                                    "validation_context_name": {
                                        "type": "string",
                                        "description": "The name of secret containing the validation context (i.e. root ca)"
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Use secret discovery service."
                            },
                            "sni_domains": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array",
                                "description": "optional. the SNI domains that should be considered for TLS connections"
                            },
                            "verify_subject_alt_name": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array",
                                "description": "Verify that the Subject Alternative Name in the peer certificate is one of the specified values.\n note that a root_ca must be provided if this option is used."
                            },
                            "parameters": {
                                "properties": {
                                    "minimum_protocol_version": {
                                        "enum": [
                                            "TLS_AUTO",
                                            0,
                                            "TLSv1_0",
                                            1,
                                            "TLSv1_1",
                                            2,
                                            "TLSv1_2",
                                            3,
                                            "TLSv1_3",
                                            4
                                        ],
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "integer"
                                            }
                                        ]
                                    },
                                    "maximum_protocol_version": {
                                        "enum": [
                                            "TLS_AUTO",
                                            0,
                                            "TLSv1_0",
                                            1,
                                            "TLSv1_1",
                                            2,
                                            "TLSv1_2",
                                            3,
                                            "TLSv1_3",
                                            4
                                        ],
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "integer"
                                            }
                                        ]
                                    },
                                    "cipher_suites": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "ecdh_curves": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "alpn_protocols": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array",
                                "description": "Set Application Level Protocol Negotiation\n If empty, defaults to [\"h2\", \"http/1.1\"]."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "If provided, the Gateway will serve TLS/SSL traffic for this set of routes"
                    },
                    "destination": {
                        "properties": {
                            "single": {
                                "$ref": "#/definitions/gloo.solo.io.Destination",
                                "additionalProperties": true,
                                "description": "Use SingleDestination to route to a single upstream"
                            },
                            "multi": {
                                "properties": {
                                    "destinations": {
                                        "items": {
                                            "$schema": "http://json-schema.org/draft-04/schema#",
                                            "properties": {
                                                "destination": {
                                                    "$ref": "#/definitions/gloo.solo.io.Destination",
                                                    "additionalProperties": true
                                                },
                                                "weight": {
                                                    "type": "integer",
                                                    "description": "Weight must be greater than zero\n Routing to each destination will be balanced by the ratio of the destination's weight to the total weight on a route"
                                                },
                                                "options": {
                                                    "properties": {
                                                        "header_manipulation": {
                                                            "properties": {
                                                                "request_headers_to_add": {
                                                                    "items": {
                                                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                                                        "properties": {
                                                                            "header": {
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "type": "string",
                                                                                        "description": "Header name."
                                                                                    },
                                                                                    "value": {
                                                                                        "type": "string",
                                                                                        "description": "Header value.\n\n The same `format specifier (config_access_log_format)` as used for\n `HTTP access logging (config_access_log)` applies here, however\n unknown header values are replaced with the empty string instead of `-`."
                                                                                    }
                                                                                },
                                                                                "additionalProperties": true,
                                                                                "type": "object",
                                                                                "description": "Explicitly specified header"
                                                                            },
                                                                            "header_secret_ref": {
                                                                                "$ref": "#/definitions/core.solo.io.ResourceRef",
                                                                                "additionalProperties": true,
                                                                                "description": "Reference to header contained in a secret"
                                                                            },
                                                                            "append": {
                                                                                "additionalProperties": true,
                                                                                "type": "boolean",
                                                                                "description": "Should the value be appended? If true (default), the value is appended to\n existing values."
                                                                            }
                                                                        },
                                                                        "additionalProperties": false,
                                                                        "type": "object",
                                                                        "description": "Header name/value pair plus option to control append behavior."
                                                                    },
                                                                    "type": "array",
                                                                    "description": "Specifies a list of HTTP headers that should be added to each request\n handled by this route or virtual host. For more information, including\n details on header value syntax, see the\n [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_conn_man/headers#config-http-conn-man-headers-custom-request-headers) ."
                                                                },
                                                                "request_headers_to_remove": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array",
                                                                    "description": "Specifies a list of HTTP headers that should be removed from each request\n handled by this route or virtual host."
                                                                },
                                                                "response_headers_to_add": {
                                                                    "items": {
                                                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                                                        "properties": {
                                                                            "header": {
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "type": "string",
                                                                                        "description": "Header name."
                                                                                    },
                                                                                    "value": {
                                                                                        "type": "string",
                                                                                        "description": "Header value."
                                                                                    }
                                                                                },
                                                                                "additionalProperties": true,
                                                                                "type": "object",
                                                                                "description": "Header name/value pair that this option applies to."
                                                                            },
                                                                            "append": {
                                                                                "additionalProperties": true,
                                                                                "type": "boolean",
                                                                                "description": "Should the value be appended? If true (default), the value is appended to\n existing values."
                                                                            }
                                                                        },
                                                                        "additionalProperties": false,
                                                                        "type": "object",
                                                                        "description": "Header name/value pair plus option to control append behavior."
                                                                    },
                                                                    "type": "array",
                                                                    "description": "Specifies a list of HTTP headers that should be added to each response\n handled by this route or host. For more information, including\n details on header value syntax, see the\n [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_conn_man/headers#config-http-conn-man-headers-custom-request-headers) ."
                                                                },
                                                                "response_headers_to_remove": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array",
                                                                    "description": "Specifies a list of HTTP headers that should be removed from each response\n handled by this route or virtual host."
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "Append/Remove headers on Requests or Responses to/from this Weighted Destination"
                                                        },
                                                        "transformations": {
                                                            "properties": {
                                                                "request_transformation": {
                                                                    "$ref": "#/definitions/envoy.api.v2.filter.http.Transformation",
                                                                    "additionalProperties": true,
                                                                    "description": "Apply a transformation to requests."
                                                                },
                                                                "clear_route_cache": {
                                                                    "type": "boolean",
                                                                    "description": "Clear the route cache if the request transformation was applied."
                                                                },
                                                                "response_transformation": {
                                                                    "$ref": "#/definitions/envoy.api.v2.filter.http.Transformation",
                                                                    "additionalProperties": true,
                                                                    "description": "Apply a transformation to responses."
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "Transformations to apply. Note: this field is superseded by `staged_transformations`.\n If `staged_transformations.regular` is set, this field will be ignored."
                                                        },
                                                        "extensions": {
                                                            "properties": {
                                                                "configs": {
                                                                    "additionalProperties": {
                                                                        "properties": {
                                                                            "fields": {
                                                                                "additionalProperties": {
                                                                                    "additionalProperties": true,
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "object",
                                                                                "description": "Unordered map of dynamically typed values."
                                                                            }
                                                                        },
                                                                        "additionalProperties": true,
                                                                        "type": "object"
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "Extensions will be passed along from Listeners, Gateways, VirtualServices, Routes, and Route tables to the\n underlying Proxy, making them useful for controllers, validation tools, etc. which interact with kubernetes yaml.\n\n Some sample use cases:\n * controllers, deployment pipelines, helm charts, etc. which wish to use extensions as a kind of opaque metadata.\n * In the future, Gloo may support gRPC-based plugins which communicate with the Gloo translator out-of-process.\n Opaque Extensions enables development of out-of-process plugins without requiring recompiling \u0026 redeploying Gloo's API."
                                                        },
                                                        "extauth": {
                                                            "properties": {
                                                                "disable": {
                                                                    "type": "boolean",
                                                                    "description": "Set to true to disable auth on the virtual host/route."
                                                                },
                                                                "config_ref": {
                                                                    "$ref": "#/definitions/core.solo.io.ResourceRef",
                                                                    "additionalProperties": true,
                                                                    "description": "A reference to an AuthConfig. This is used to configure the GlooE extauth server."
                                                                },
                                                                "custom_auth": {
                                                                    "properties": {
                                                                        "context_extensions": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "object",
                                                                            "description": "When a request matches the virtual host, route, or weighted destination on which this configuration is defined,\n Gloo will add the given context_extensions to the request that is sent to the external authorization server.\n This allows the server to base the auth decision on metadata that you define on the source of the request.\n\n This attribute is analogous to Envoy's config.filter.http.ext_authz.v2.CheckSettings. See the official\n [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/filter/http/ext_authz/v2/ext_authz.proto.html?highlight=ext_authz#config-filter-http-ext-authz-v2-checksettings)\n for more details."
                                                                        }
                                                                    },
                                                                    "additionalProperties": true,
                                                                    "type": "object",
                                                                    "description": "Use this field if you are running your own custom extauth server."
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "Enterprise-only: Authentication configuration"
                                                        },
                                                        "buffer_per_route": {
                                                            "properties": {
                                                                "disabled": {
                                                                    "type": "boolean",
                                                                    "description": "Disable the buffer filter for this particular vhost or route."
                                                                },
                                                                "buffer": {
                                                                    "properties": {
                                                                        "max_request_bytes": {
                                                                            "additionalProperties": true,
                                                                            "type": "integer",
                                                                            "description": "The maximum request size that the filter will buffer before the connection\n manager will stop buffering and return a 413 response."
                                                                        }
                                                                    },
                                                                    "additionalProperties": true,
                                                                    "type": "object",
                                                                    "description": "Override the global configuration of the buffer filter with this new config.\n Note: If you have not set a global config (at the gateway level), this\n override will not do anything by itself."
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "BufferPerRoute can be used to set the maximum request size\n that the filter will buffer before the connection\n manager will stop buffering and return a 413 response.\n Note: If you have not set a global config (at the gateway level), this\n override will not do anything by itself."
                                                        },
                                                        "csrf": {
                                                            "properties": {
                                                                "filter_enabled": {
                                                                    "$ref": "#/definitions/solo.io.envoy.config.core.v3.RuntimeFractionalPercent",
                                                                    "additionalProperties": true,
                                                                    "description": "Specifies the % of requests for which the CSRF filter is enabled.\n\n If :ref:`runtime_key \u003cenvoy_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key\u003e` is specified,\n Envoy will lookup the runtime key to get the percentage of requests to filter.\n\n .. note::\n\n   This field defaults to 100/:ref:`HUNDRED\n   \u003cenvoy_api_enum_type.v3.FractionalPercent.DenominatorType\u003e`."
                                                                },
                                                                "shadow_enabled": {
                                                                    "$ref": "#/definitions/solo.io.envoy.config.core.v3.RuntimeFractionalPercent",
                                                                    "additionalProperties": true,
                                                                    "description": "Specifies that CSRF policies will be evaluated and tracked, but not enforced.\n\n This is intended to be used when ``filter_enabled`` is off and will be ignored otherwise.\n\n If :ref:`runtime_key \u003cenvoy_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key\u003e` is specified,\n Envoy will lookup the runtime key to get the percentage of requests for which it will evaluate\n and track the request's *Origin* and *Destination* to determine if it's valid, but will not\n enforce any policies."
                                                                },
                                                                "additional_origins": {
                                                                    "items": {
                                                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                                                        "properties": {
                                                                            "exact": {
                                                                                "type": "string",
                                                                                "description": "The input string must match exactly the string specified here.\n\n Examples:\n\n * *abc* only matches the value *abc*."
                                                                            },
                                                                            "prefix": {
                                                                                "type": "string",
                                                                                "description": "The input string must have the prefix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *abc.xyz*"
                                                                            },
                                                                            "suffix": {
                                                                                "type": "string",
                                                                                "description": "The input string must have the suffix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc*"
                                                                            },
                                                                            "safe_regex": {
                                                                                "properties": {
                                                                                    "google_re2": {
                                                                                        "properties": {
                                                                                            "max_program_size": {
                                                                                                "additionalProperties": true,
                                                                                                "type": "integer",
                                                                                                "description": "This field controls the RE2 \"program size\" which is a rough estimate of how complex a\n compiled regex is to evaluate. A regex that has a program size greater than the configured\n value will fail to compile. In this case, the configured max program size can be increased\n or the regex can be simplified. If not specified, the default is 100.\n\n This field is deprecated; regexp validation should be performed on the management server\n instead of being done by each individual client."
                                                                                            }
                                                                                        },
                                                                                        "additionalProperties": true,
                                                                                        "type": "object",
                                                                                        "description": "Google's RE2 regex engine."
                                                                                    },
                                                                                    "regex": {
                                                                                        "type": "string",
                                                                                        "description": "The regex match string. The string must be supported by the configured engine."
                                                                                    }
                                                                                },
                                                                                "additionalProperties": true,
                                                                                "type": "object",
                                                                                "description": "The input string must match the regular expression specified here."
                                                                            },
                                                                            "ignore_case": {
                                                                                "type": "boolean",
                                                                                "description": "If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no\n effect for the safe_regex match.\n For example, the matcher *data* will match both input string *Data* and *data* if set to true."
                                                                            }
                                                                        },
                                                                        "additionalProperties": false,
                                                                        "type": "object",
                                                                        "description": "[#protodoc-title: String matcher]\n\nSpecifies the way to match a string.\n [#next-free-field: 7]"
                                                                    },
                                                                    "type": "array",
                                                                    "description": "Specifies additional source origins that will be allowed in addition to\n the destination origin.\n\n More information on how this can be configured via runtime can be found\n :ref:`here \u003ccsrf-configuration\u003e`."
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "Csrf can be used to set percent of requests for which the CSRF filter is enabled, enable shadow-only mode\n where policies will be evaluated and tracked, but not enforced and add additional source origins\n that will be allowed in addition to the destination origin.\n For more, see https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/filter/http/csrf/v2/csrf.proto"
                                                        },
                                                        "staged_transformations": {
                                                            "properties": {
                                                                "early": {
                                                                    "$ref": "#/definitions/transformation.options.gloo.solo.io.RequestResponseTransformations",
                                                                    "additionalProperties": true,
                                                                    "description": "Early transformations happen before most other options (Like Auth and Rate Limit)."
                                                                },
                                                                "regular": {
                                                                    "$ref": "#/definitions/transformation.options.gloo.solo.io.RequestResponseTransformations",
                                                                    "additionalProperties": true,
                                                                    "description": "Regular transformations happen after Auth and Rate limit decisions has been made."
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "Early transformations stage. These transformations run before most other options are processed.\n If the `regular` field is set in here, the `transformations` field is ignored."
                                                        }
                                                    },
                                                    "additionalProperties": true,
                                                    "type": "object",
                                                    "description": "Apply configuration to traffic that is sent to this weighted destination"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "WeightedDestination attaches a weight to a single destination."
                                        },
                                        "type": "array",
                                        "description": "This list must contain at least one destination or the listener housing this route will be invalid,\n causing Gloo to error the parent proxy resource."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Use MultiDestination to load balance requests between multiple upstreams (by weight)"
                            },
                            "upstream_group": {
                                "$ref": "#/definitions/core.solo.io.ResourceRef",
                                "additionalProperties": true,
                                "description": "Use a reference to an upstream group for routing."
                            },
                            "forward_sni_cluster_name": {
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Forwards the SNI name into the destination cluster\n https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/filter/network/sni_cluster/empty/sni_cluster\n Note: This filter will only work properly with TLS connections in which the upstream SNI domain is specified"
                            }
                        },
                        "additionalProperties": true,
                        "type": "object"
                    }
                },
                "additionalProperties": false,
                "type": "object"
            },
            "type": "array",
            "description": "List of filter chains to match on for this listener"
        },
        "options": {
            "properties": {
                "tcp_proxy_settings": {
                    "properties": {
                        "max_connect_attempts": {
                            "additionalProperties": true,
                            "type": "integer"
                        },
                        "idle_timeout": {
                            "properties": {
                                "seconds": {
                                    "type": "string",
                                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                },
                                "nanos": {
                                    "type": "integer",
                                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                }
                            },
                            "additionalProperties": true,
                            "type": "object"
                        }
                    },
                    "additionalProperties": true,
                    "type": "object"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Options contains top-level configuration to be applied to a listener.\n Listener config is applied to traffic for the given listener.\n Some configuration here can be overridden in\n Virtual Host Options configuration or Route Options configuration"
        },
        "stat_prefix": {
            "type": "string",
            "description": "prefix for addressing envoy stats for the tcp proxy"
        }
    },
    "additionalProperties": false,
    "type": "object",
    "definitions": {
        "core.solo.io.ResourceRef": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "A way to reference resources across namespaces",
            "id": "core.solo.io.ResourceRef"
        },
        "envoy.api.v2.filter.http.InjaTemplate": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "text": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "Defines an [Inja template](https://github.com/pantor/inja) that will be\n rendered by Gloo. In addition to the core template functions, the Gloo\n transformation filter defines the following custom functions:\n - header(header_name): returns the value of the header with the given name\n - extraction(extractor_name): returns the value of the extractor with the\n given name\n - env(env_var_name): returns the value of the environment variable with the\n given name\n - body(): returns the request/response body\n - context(): returns the base JSON context (allowing for example to range on\n a JSON body that is an array)",
            "id": "envoy.api.v2.filter.http.InjaTemplate"
        },
        "envoy.api.v2.filter.http.Transformation": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "transformation_template": {
                    "$ref": "#/definitions/envoy.api.v2.filter.http.TransformationTemplate",
                    "additionalProperties": true,
                    "description": "Apply transformation templates."
                },
                "header_body_transform": {
                    "additionalProperties": true,
                    "type": "object",
                    "description": "This type of transformation will make all the headers available in the\n response body. The resulting JSON body will consist of two attributes:\n 'headers', containing the headers, and 'body', containing the original\n body."
                }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "This message defines a transformation.",
            "id": "envoy.api.v2.filter.http.Transformation"
        },
        "envoy.api.v2.filter.http.TransformationTemplate": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "advanced_templates": {
                    "type": "boolean",
                    "description": "If set to true, use JSON pointer notation (e.g. \"time/start\") instead of\n dot notation (e.g. \"time.start\") to access JSON elements. Defaults to\n false.\n\n Please note that, if set to 'true', you will need to use the `extraction`\n function to access extractors in the template (e.g. '{{\n extraction(\"my_extractor\") }}'); if the default value of 'false' is used,\n extractors will simply be available by their name (e.g. '{{ my_extractor\n }}')."
                },
                "extractors": {
                    "additionalProperties": {
                        "properties": {
                            "header": {
                                "type": "string",
                                "description": "Extract information from headers"
                            },
                            "body": {
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Extract information from the request/response body"
                            },
                            "regex": {
                                "type": "string",
                                "description": "Only strings matching this regular expression will be part of the\n extraction. The most simple value for this field is '.*', which matches the\n whole source. The field is required. If extraction fails the result is an\n empty value."
                            },
                            "subgroup": {
                                "type": "integer",
                                "description": "If your regex contains capturing groups, use this field to determine which\n group should be selected."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object"
                    },
                    "type": "object",
                    "description": "Use this attribute to extract information from the request. It consists of\n a map of strings to extractors. The extractor will defines which\n information will be extracted, while the string key will provide the\n extractor with a name. You can reference extractors by their name in\n templates, e.g. \"{{ my-extractor }}\" will render to the value of the\n \"my-extractor\" extractor."
                },
                "headers": {
                    "additionalProperties": {
                        "$ref": "#/definitions/envoy.api.v2.filter.http.InjaTemplate",
                        "additionalProperties": true
                    },
                    "type": "object",
                    "description": "Use this attribute to transform request/response headers. It consists of a\n map of strings to templates. The string key determines the name of the\n resulting header, the rendered template will determine the value. Any existing\n headers with the same header name will be replaced by the transformed header.\n If a header name is included in `headers` and `headers_to_append`, it will first\n be replaced the template in `headers`, then additional header values will be appended\n by the templates defined in `headers_to_append`.\n For example, the following header transformation configuration:\n\n ```yaml\n    headers:\n      x-header-one: {\"text\": \"first {{inja}} template\"}\n      x-header-one: {\"text\": \"second {{inja}} template\"}\n    headersToAppend:\n      - key: x-header-one\n        value: {\"text\": \"first appended {{inja}} template\"}\n      - key: x-header-one\n        value: {\"text\": \"second appended {{inja}} template\"}\n ```\n will result in the following headers on the HTTP message:\n\n ```\n x-header-one: first inja template\n x-header-one: first appended inja template\n x-header-one: second appended inja template\n ```"
                },
                "headers_to_append": {
                    "items": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "properties": {
                            "key": {
                                "type": "string",
                                "description": "Header name"
                            },
                            "value": {
                                "$ref": "#/definitions/envoy.api.v2.filter.http.InjaTemplate",
                                "additionalProperties": true,
                                "description": "Apply a template to the header value"
                            }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "description": "Defines a header-template pair to be used in `headers_to_append`"
                    },
                    "type": "array",
                    "description": "Use this attribute to transform request/response headers. It consists of\n an array of string/template objects. Use this attribute to define multiple\n templates for a single header. Header template(s) defined here will be appended to any\n existing headers with the same header name, not replace existing ones.\n See `headers` documentation to see an example of usage."
                },
                "body": {
                    "$ref": "#/definitions/envoy.api.v2.filter.http.InjaTemplate",
                    "additionalProperties": true,
                    "description": "Apply a template to the body"
                },
                "passthrough": {
                    "additionalProperties": true,
                    "type": "object",
                    "description": "This will cause the transformation filter not to buffer the body.\n Use this setting if the response body is large and you don't need to\n transform nor extract information from it."
                },
                "merge_extractors_to_body": {
                    "additionalProperties": true,
                    "type": "object",
                    "description": "Merge all defined extractors to the request/response body.\n If you want to nest elements inside the body, use dot separator in the\n extractor name."
                },
                "parse_body_behavior": {
                    "enum": [
                        "ParseAsJson",
                        0,
                        "DontParse",
                        1
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ]
                },
                "ignore_error_on_parse": {
                    "type": "boolean",
                    "description": "If set to true, Envoy will not throw an exception in case the body parsing\n fails."
                },
                "dynamic_metadata_values": {
                    "items": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "properties": {
                            "metadata_namespace": {
                                "type": "string",
                                "description": "The metadata namespace. Defaults to the filter namespace."
                            },
                            "key": {
                                "type": "string",
                                "description": "The metadata key."
                            },
                            "value": {
                                "$ref": "#/definitions/envoy.api.v2.filter.http.InjaTemplate",
                                "additionalProperties": true,
                                "description": "A template that determines the metadata value."
                            }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "description": "Defines an [Envoy Dynamic\n Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)\n entry."
                    },
                    "type": "array",
                    "description": "Use this field to set Dynamic Metadata."
                }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "Defines a transformation template.",
            "id": "envoy.api.v2.filter.http.TransformationTemplate"
        },
        "gloo.solo.io.Destination": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "upstream": {
                    "$ref": "#/definitions/core.solo.io.ResourceRef",
                    "additionalProperties": true,
                    "description": "Route requests to a Gloo upstream"
                },
                "kube": {
                    "properties": {
                        "ref": {
                            "$ref": "#/definitions/core.solo.io.ResourceRef",
                            "additionalProperties": true,
                            "description": "The target service"
                        },
                        "port": {
                            "type": "integer",
                            "description": "The port attribute of the service"
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "Route requests to a kubernetes service"
                },
                "consul": {
                    "properties": {
                        "service_name": {
                            "type": "string",
                            "description": "The name of the target service. This field is required."
                        },
                        "tags": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "description": "If provided, load balance traffic only between services matching all the given tags."
                        },
                        "data_centers": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "description": "If provided, load balance traffic only between services running in the given\n [data centers](https://www.consul.io/docs/internals/architecture.html)."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "Route requests to a consul service"
                },
                "destination_spec": {
                    "properties": {
                        "aws": {
                            "properties": {
                                "logical_name": {
                                    "type": "string",
                                    "description": "The Logical Name of the LambdaFunctionSpec to be invoked."
                                },
                                "invocation_style": {
                                    "enum": [
                                        "SYNC",
                                        0,
                                        "ASYNC",
                                        1
                                    ],
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ],
                                    "description": "Can be either Sync or Async."
                                },
                                "response_transformation": {
                                    "type": "boolean",
                                    "description": "de-jsonify response bodies returned from aws lambda"
                                }
                            },
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "azure": {
                            "properties": {
                                "function_name": {
                                    "type": "string",
                                    "description": "The Function Name of the FunctionSpec to be invoked."
                                }
                            },
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "rest": {
                            "properties": {
                                "function_name": {
                                    "type": "string"
                                },
                                "parameters": {
                                    "$ref": "#/definitions/transformation.options.gloo.solo.io.Parameters",
                                    "additionalProperties": true
                                },
                                "response_transformation": {
                                    "$ref": "#/definitions/envoy.api.v2.filter.http.TransformationTemplate",
                                    "additionalProperties": true
                                }
                            },
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "grpc": {
                            "properties": {
                                "package": {
                                    "type": "string",
                                    "description": "The proto package of the function."
                                },
                                "service": {
                                    "type": "string",
                                    "description": "The name of the service of the function."
                                },
                                "function": {
                                    "type": "string",
                                    "description": "The name of the function."
                                },
                                "parameters": {
                                    "$ref": "#/definitions/transformation.options.gloo.solo.io.Parameters",
                                    "additionalProperties": true,
                                    "description": "Parameters describe how to extract the function parameters from the\n request."
                                }
                            },
                            "additionalProperties": true,
                            "type": "object"
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "Note: When in the context of a TCP gateway the below 2 fields will be ignored\n\nSome upstreams utilize options which require or permit additional configuration on routes targeting them.\n gRPC upstreams, for example, allow specifying REST-style parameters for JSON-to-gRPC transcoding in the\n destination config. If the destination config is required for the upstream and not provided by the user,\n Gloo will invalidate the destination and its parent resources."
                },
                "subset": {
                    "properties": {
                        "values": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "If specified, traffic will only be routed to a subset of the upstream. If upstream doesn't\n contain the specified subset, we will fallback to normal upstream routing."
                }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "Destinations define routable destinations for proxied requests.",
            "id": "gloo.solo.io.Destination"
        },
        "matchers.core.gloo.solo.io.HeaderMatcher": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the header in the request."
                },
                "value": {
                    "type": "string",
                    "description": "Specifies the value of the header. If the value is absent a request that\n has the name header will match, regardless of the header’s value."
                },
                "regex": {
                    "type": "boolean",
                    "description": "Specifies whether the header value should be treated as regex or not."
                },
                "invert_match": {
                    "type": "boolean",
                    "description": "If set to true, the result of the match will be inverted. Defaults to false.\n\n Examples:\n * name=foo, invert_match=true: matches if no header named `foo` is present\n * name=foo, value=bar, invert_match=true: matches if no header named `foo` with value `bar` is present\n * name=foo, value=``\\d{3}``, regex=true, invert_match=true: matches if no header named `foo` with a value consisting of three integers is present"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "Internally, Gloo always uses the HTTP/2 *:authority* header to represent the HTTP/1 *Host* header.\n Thus, if attempting to match on *Host*, match on *:authority* instead.",
            "id": "matchers.core.gloo.solo.io.HeaderMatcher"
        },
        "solo.io.envoy.config.core.v3.RuntimeFractionalPercent": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "default_value": {
                    "properties": {
                        "numerator": {
                            "type": "integer",
                            "description": "Specifies the numerator. Defaults to 0."
                        },
                        "denominator": {
                            "enum": [
                                "HUNDRED",
                                0,
                                "TEN_THOUSAND",
                                1,
                                "MILLION",
                                2
                            ],
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "Specifies the denominator. If the denominator specified is less than the numerator, the final\n fractional percentage is capped at 1 (100%)."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "Default value if the runtime value's for the numerator/denominator keys are not available."
                },
                "runtime_key": {
                    "type": "string",
                    "description": "Runtime key for a YAML representation of a FractionalPercent."
                }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "Runtime derived FractionalPercent with defaults for when the numerator or denominator is not\n specified via a runtime key.\n\n .. note::\n\n   Parsing of the runtime key's data is implemented such that it may be represented as a\n   :ref:`FractionalPercent \u003cenvoy_api_msg_type.v3.FractionalPercent\u003e` proto represented as JSON/YAML\n   and may also be represented as an integer with the assumption that the value is an integral\n   percentage out of 100. For instance, a runtime key lookup returning the value \"42\" would parse\n   as a `FractionalPercent` whose numerator is 42 and denominator is HUNDRED.",
            "id": "solo.io.envoy.config.core.v3.RuntimeFractionalPercent"
        },
        "transformation.options.gloo.solo.io.Parameters": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "headers": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "headers that will be used to extract data for processing output templates\n Gloo will search for parameters by their name in header value strings, enclosed in single\n curly braces\n Example:\n   extensions:\n     parameters:\n         headers:\n           x-user-id: '{userId}'"
                },
                "path": {
                    "additionalProperties": true,
                    "type": "string",
                    "description": "part of the (or the entire) path that will be used extract data for processing output templates\n Gloo will search for parameters by their name in header value strings, enclosed in single\n curly braces\n Example:\n   extensions:\n     parameters:\n         path: /users/{ userId }"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "id": "transformation.options.gloo.solo.io.Parameters"
        },
        "transformation.options.gloo.solo.io.RequestResponseTransformations": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "request_transforms": {
                    "items": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "properties": {
                            "matcher": {
                                "properties": {
                                    "prefix": {
                                        "type": "string",
                                        "description": "If specified, the route is a prefix rule meaning that the prefix must\n match the beginning of the *:path* header."
                                    },
                                    "exact": {
                                        "type": "string",
                                        "description": "If specified, the route is an exact path rule meaning that the path must\n exactly match the *:path* header once the query string is removed."
                                    },
                                    "regex": {
                                        "type": "string",
                                        "description": "If specified, the route is a regular expression rule meaning that the\n regex must match the *:path* header once the query string is removed. The entire path\n (without the query string) must match the regex. The rule will not match if only a\n sub-sequence of the *:path* header matches the regex. The regex grammar is defined `here\n \u003chttp://en.cppreference.com/w/cpp/regex/ecmascript\u003e`_.\n\n Examples:\u003cbr/\u003e\n\n * The regex */b[io]t* matches the path */bit*\u003cbr/\u003e\n * The regex */b[io]t* matches the path */bot*\u003cbr/\u003e\n * The regex */b[io]t* does not match the path */bite*\u003cbr/\u003e\n * The regex */b[io]t* does not match the path */bit/bot*\u003cbr/\u003e\u003cbr/\u003e\n\n Note that the complexity of the regex is constrained by the regex engine's \"program size\" setting.\n If your regex is too complex, you may need to adjust the `regexMaxProgramSize` field\n in the `GlooOptions` section of your `Settings` resource"
                                    },
                                    "case_sensitive": {
                                        "additionalProperties": true,
                                        "type": "boolean",
                                        "description": "Indicates that prefix/path matching should be case sensitive. The default is true."
                                    },
                                    "headers": {
                                        "items": {
                                            "$schema": "http://json-schema.org/draft-04/schema#",
                                            "$ref": "#/definitions/matchers.core.gloo.solo.io.HeaderMatcher"
                                        },
                                        "type": "array",
                                        "description": "Specifies a set of headers that the route should match on. The router will\n check the request’s headers against all the specified headers in the route\n config. A match will happen if all the headers in the route are present in\n the request with the same values (or based on presence if the value field\n is not in the config)."
                                    },
                                    "query_parameters": {
                                        "items": {
                                            "$schema": "http://json-schema.org/draft-04/schema#",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "Specifies the name of a key that must be present in the requested\n *path*'s query string."
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "description": "Specifies the value of the key. If the value is absent, a request\n that contains the key in its query string will match, whether the\n key appears with a value (e.g., \"?debug=true\") or not (e.g., \"?debug\")"
                                                },
                                                "regex": {
                                                    "type": "boolean",
                                                    "description": "Specifies whether the query parameter value is a regular expression.\n Defaults to false. The entire query parameter value (i.e., the part to\n the right of the equals sign in \"key=value\") must match the regex.\n E.g., the regex \"\\d+$\" will match \"123\" but not \"a123\" or \"123a\"."
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "Query parameter matching treats the query string of a request's :path header\n as an ampersand-separated list of keys and/or key=value elements."
                                        },
                                        "type": "array",
                                        "description": "Specifies a set of URL query parameters on which the route should\n match. The router will check the query string from the *path* header\n against all the specified query parameters. If the number of specified\n query parameters is nonzero, they all must match the *path* header's\n query string for a match to occur."
                                    },
                                    "methods": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "description": "HTTP Method/Verb(s) to match on. If none specified, the matcher will ignore the HTTP Method"
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Matches on the request properties."
                            },
                            "clear_route_cache": {
                                "type": "boolean",
                                "description": "Should we clear the route cache if a transformation was matched."
                            },
                            "request_transformation": {
                                "$ref": "#/definitions/envoy.api.v2.filter.http.Transformation",
                                "additionalProperties": true,
                                "description": "Transformation to apply on the request."
                            },
                            "response_transformation": {
                                "$ref": "#/definitions/envoy.api.v2.filter.http.Transformation",
                                "additionalProperties": true,
                                "description": "Transformation to apply on the response."
                            }
                        },
                        "additionalProperties": false,
                        "type": "object"
                    },
                    "type": "array",
                    "description": "Transformations to apply on the request. The first request that matches will apply."
                },
                "response_transforms": {
                    "items": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "properties": {
                            "matchers": {
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "$ref": "#/definitions/matchers.core.gloo.solo.io.HeaderMatcher"
                                },
                                "type": "array",
                                "description": "Response headers to match on."
                            },
                            "response_code_details": {
                                "type": "string",
                                "description": "Response code detail to match on. To see the response code details for your usecase,\n you can use the envoy access log %RESPONSE_CODE_DETAILS% formatter to log it."
                            },
                            "response_transformation": {
                                "$ref": "#/definitions/envoy.api.v2.filter.http.Transformation",
                                "additionalProperties": true,
                                "description": "Transformation to apply on the response."
                            }
                        },
                        "additionalProperties": false,
                        "type": "object"
                    },
                    "type": "array",
                    "description": "Transformations to apply on the response. This field is only consulted if there is no\n response transformation in the matched `request_transforms`. i.e. Only one response transformation\n will be executed. The first response transformation that matches will\n apply."
                }
            },
            "additionalProperties": false,
            "type": "object",
            "id": "transformation.options.gloo.solo.io.RequestResponseTransformations"
        }
    }
}