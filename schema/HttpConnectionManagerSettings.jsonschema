{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "skip_xff_append": {
            "type": "boolean"
        },
        "via": {
            "type": "string"
        },
        "xff_num_trusted_hops": {
            "type": "integer"
        },
        "use_remote_address": {
            "additionalProperties": true,
            "type": "boolean"
        },
        "generate_request_id": {
            "additionalProperties": true,
            "type": "boolean"
        },
        "proxy_100_continue": {
            "type": "boolean"
        },
        "stream_idle_timeout": {
            "properties": {
                "seconds": {
                    "type": "string",
                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                },
                "nanos": {
                    "type": "integer",
                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                }
            },
            "additionalProperties": true,
            "type": "object"
        },
        "idle_timeout": {
            "properties": {
                "seconds": {
                    "type": "string",
                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                },
                "nanos": {
                    "type": "integer",
                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                }
            },
            "additionalProperties": true,
            "type": "object"
        },
        "max_request_headers_kb": {
            "additionalProperties": true,
            "type": "integer"
        },
        "request_timeout": {
            "properties": {
                "seconds": {
                    "type": "string",
                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                },
                "nanos": {
                    "type": "integer",
                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                }
            },
            "additionalProperties": true,
            "type": "object"
        },
        "drain_timeout": {
            "properties": {
                "seconds": {
                    "type": "string",
                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                },
                "nanos": {
                    "type": "integer",
                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                }
            },
            "additionalProperties": true,
            "type": "object"
        },
        "delayed_close_timeout": {
            "properties": {
                "seconds": {
                    "type": "string",
                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                },
                "nanos": {
                    "type": "integer",
                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                }
            },
            "additionalProperties": true,
            "type": "object"
        },
        "server_name": {
            "type": "string"
        },
        "accept_http_10": {
            "type": "boolean",
            "description": "For explanation of these settings see: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/core/protocol.proto#envoy-api-msg-core-http1protocoloptions"
        },
        "default_host_for_http_10": {
            "type": "string"
        },
        "proper_case_header_key_format": {
            "type": "boolean"
        },
        "tracing": {
            "properties": {
                "request_headers_for_tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Optional. If specified, Envoy will include the headers and header values for any matching request headers."
                },
                "verbose": {
                    "type": "boolean",
                    "description": "Optional. If true, Envoy will include logs for streaming events. Default: false."
                },
                "trace_percentages": {
                    "properties": {
                        "client_sample_percentage": {
                            "additionalProperties": true,
                            "type": "number",
                            "description": "Percentage of requests that should produce traces when the `x-client-trace-id` header is provided.\n optional, defaults to 100.0\n This should be a value between 0.0 and 100.0, with up to 6 significant digits."
                        },
                        "random_sample_percentage": {
                            "additionalProperties": true,
                            "type": "number",
                            "description": "Percentage of requests that should produce traces by random sampling.\n optional, defaults to 100.0\n This should be a value between 0.0 and 100.0, with up to 6 significant digits."
                        },
                        "overall_sample_percentage": {
                            "additionalProperties": true,
                            "type": "number",
                            "description": "Overall percentage of requests that should produce traces.\n optional, defaults to 100.0\n This should be a value between 0.0 and 100.0, with up to 6 significant digits."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "Requests can produce traces by random sampling or when the `x-client-trace-id` header is provided.\n TracePercentages defines the limits for random, forced, and overall tracing percentages."
                },
                "zipkin_config": {
                    "properties": {
                        "collector_upstream_ref": {
                            "$ref": "#/definitions/core.solo.io.ResourceRef",
                            "additionalProperties": true,
                            "description": "The upstream that hosts the Zipkin collectors."
                        },
                        "cluster_name": {
                            "type": "string",
                            "description": "The name of the cluster that hosts the Zipkin collectors. Note that the\n Zipkin cluster must be defined in the :ref:`Bootstrap static cluster\n resources \u003cenvoy_api_field_config.bootstrap.v3.Bootstrap.StaticResources.clusters\u003e`."
                        },
                        "collector_endpoint": {
                            "type": "string",
                            "description": "The API endpoint of the Zipkin service where the spans will be sent. When\n using a standard Zipkin installation, the API endpoint is typically\n /api/v1/spans, which is the default value."
                        },
                        "trace_id_128bit": {
                            "type": "boolean",
                            "description": "Determines whether a 128bit trace id will be used when creating a new\n trace instance. The default value is false, which will result in a 64 bit trace id being used."
                        },
                        "shared_span_context": {
                            "additionalProperties": true,
                            "type": "boolean",
                            "description": "Determines whether client and server spans will share the same span context.\n The default value is true."
                        },
                        "collector_endpoint_version": {
                            "enum": [
                                "DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE",
                                0,
                                "HTTP_JSON",
                                1,
                                "HTTP_PROTO",
                                2
                            ],
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "Determines the selected collector endpoint version. By default, the ``HTTP_JSON_V1`` will be\n used."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object"
                },
                "datadog_config": {
                    "properties": {
                        "collector_upstream_ref": {
                            "$ref": "#/definitions/core.solo.io.ResourceRef",
                            "additionalProperties": true,
                            "description": "The upstream to use for submitting traces to the Datadog agent."
                        },
                        "cluster_name": {
                            "type": "string",
                            "description": "The name of the cluster to use for submitting traces to the Datadog agent. Note that the\n cluster must be defined in the :ref:`Bootstrap static cluster\n resources \u003cenvoy_api_field_config.bootstrap.v3.Bootstrap.StaticResources.clusters\u003e`."
                        },
                        "service_name": {
                            "type": "string",
                            "description": "The name used for the service when traces are generated by envoy."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object"
                }
            },
            "additionalProperties": true,
            "type": "object"
        },
        "forward_client_cert_details": {
            "enum": [
                "SANITIZE",
                0,
                "FORWARD_ONLY",
                1,
                "APPEND_FORWARD",
                2,
                "SANITIZE_SET",
                3,
                "ALWAYS_FORWARD_ONLY",
                4
            ],
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "integer"
                }
            ]
        },
        "set_current_client_cert_details": {
            "properties": {
                "subject": {
                    "additionalProperties": true,
                    "type": "boolean"
                },
                "cert": {
                    "type": "boolean"
                },
                "chain": {
                    "type": "boolean"
                },
                "dns": {
                    "type": "boolean"
                },
                "uri": {
                    "type": "boolean"
                }
            },
            "additionalProperties": true,
            "type": "object"
        },
        "preserve_external_request_id": {
            "type": "boolean"
        },
        "upgrades": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "websocket": {
                        "properties": {
                            "enabled": {
                                "additionalProperties": true,
                                "type": "boolean",
                                "description": "Whether the upgrade should be enabled. If left unset, Envoy will enable the protocol upgrade."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "Specification for websocket upgrade requests."
                    }
                },
                "additionalProperties": false,
                "type": "object"
            },
            "type": "array",
            "description": "HttpConnectionManager configuration for protocol upgrade requests. \n Note: WebSocket upgrades are enabled by default on the HTTP Connection Manager and must be explicitly disabled."
        },
        "max_connection_duration": {
            "properties": {
                "seconds": {
                    "type": "string",
                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                },
                "nanos": {
                    "type": "integer",
                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "For an explanation of these settings see https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/protocol.proto#config-core-v3-httpprotocoloptions"
        },
        "max_stream_duration": {
            "properties": {
                "seconds": {
                    "type": "string",
                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                },
                "nanos": {
                    "type": "integer",
                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                }
            },
            "additionalProperties": true,
            "type": "object"
        },
        "server_header_transformation": {
            "enum": [
                "OVERWRITE",
                0,
                "APPEND_IF_ABSENT",
                1,
                "PASS_THROUGH",
                2
            ],
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "integer"
                }
            ],
            "description": "For an explanation of the settings see: https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto.html#envoy-v3-api-enum-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-serverheadertransformation"
        }
    },
    "additionalProperties": false,
    "type": "object",
    "description": "Contains various settings for Envoy's http connection manager.\n See here for more information: https://www.envoyproxy.io/docs/envoy/v1.9.0/configuration/http_conn_man/http_conn_man",
    "definitions": {
        "core.solo.io.ResourceRef": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "A way to reference resources across namespaces",
            "id": "core.solo.io.ResourceRef"
        }
    }
}