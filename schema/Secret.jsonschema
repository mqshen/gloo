{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "aws": {
            "properties": {
                "access_key": {
                    "type": "string",
                    "description": "provided by `glooctl create secret aws`"
                },
                "secret_key": {
                    "type": "string",
                    "description": "provided by `glooctl create secret aws`"
                },
                "session_token": {
                    "type": "string",
                    "description": "provided by `glooctl create secret aws`"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "AWS credentials"
        },
        "azure": {
            "properties": {
                "api_keys": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "provided by `glooctl create secret azure`"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Azure credentials"
        },
        "tls": {
            "properties": {
                "cert_chain": {
                    "type": "string",
                    "description": "provided by `glooctl create secret tls`"
                },
                "private_key": {
                    "type": "string",
                    "description": "provided by `glooctl create secret tls`"
                },
                "root_ca": {
                    "type": "string",
                    "description": "provided by `glooctl create secret tls`"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "TLS secret specification"
        },
        "oauth": {
            "properties": {
                "client_secret": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Enterprise-only: OAuth secret configuration"
        },
        "api_key": {
            "properties": {
                "generate_api_key": {
                    "type": "boolean",
                    "description": "If true, generate an API key.\n This field is deprecated as it was used only internally by `glooctl` and is not actually part of the secret API."
                },
                "api_key": {
                    "type": "string",
                    "description": "The value of the API key."
                },
                "labels": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "A list of labels (key=value) for the apikey secret.\u003cbr/\u003e\n These labels are used when creating an ApiKeySecret via `glooctl` and then are copied to the metadata of the created secret.\n This field is deprecated as it was used only internally by `glooctl` and is not actually part of the secret API."
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "If the secret data contains entries in addition to the API key one, they will be copied to this field."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Enterprise-only: ApiKey secret configuration"
        },
        "header": {
            "properties": {
                "headers": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "A collection of header name to header value mappings, each representing an additional header that could be added to a request.\n Provided by `glooctl create secret header`"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Secrets for use in header payloads (e.g. in the Envoy healthcheck API)"
        },
        "extensions": {
            "properties": {
                "configs": {
                    "additionalProperties": {
                        "properties": {
                            "fields": {
                                "additionalProperties": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "type": "object",
                                "description": "Unordered map of dynamically typed values."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object"
                    },
                    "type": "object"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Extensions will be passed along from Listeners, Gateways, VirtualServices, Routes, and Route tables to the\n underlying Proxy, making them useful for controllers, validation tools, etc. which interact with kubernetes yaml.\n\n Some sample use cases:\n * controllers, deployment pipelines, helm charts, etc. which wish to use extensions as a kind of opaque metadata.\n * In the future, Gloo may support gRPC-based plugins which communicate with the Gloo translator out-of-process.\n Opaque Extensions enables development of out-of-process plugins without requiring recompiling \u0026 redeploying Gloo's API."
        },
        "metadata": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the resource.\n\nNames must be unique and follow the following syntax rules:\n\nOne or more lowercase rfc1035/rfc1123 labels separated by '.' with a maximum length of 253 characters."
                },
                "namespace": {
                    "type": "string",
                    "description": "Namespace is used for the namespacing of resources."
                },
                "cluster": {
                    "type": "string",
                    "description": "Cluster indicates the cluster this resource belongs to\n Cluster is only applicable in certain contexts, e.g. Kubernetes\n An empty string here refers to the local cluster"
                },
                "resource_version": {
                    "type": "string",
                    "description": "An opaque value that represents the internal version of this object that can\n be used by clients to determine when objects have changed."
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "Map of string keys and values that can be used to organize and categorize\n (scope and select) objects. Some resources contain `selectors` which\n can be linked with other resources by their labels"
                },
                "annotations": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata."
                },
                "generation": {
                    "type": "string",
                    "description": "A sequence number representing a specific generation of the desired state.\n Currently only populated for resources backed by Kubernetes"
                },
                "owner_references": {
                    "items": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "properties": {
                            "api_version": {
                                "type": "string"
                            },
                            "block_owner_deletion": {
                                "additionalProperties": true,
                                "type": "boolean"
                            },
                            "controller": {
                                "additionalProperties": true,
                                "type": "boolean"
                            },
                            "kind": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "uid": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "description": "proto message representing kubernertes owner reference\n https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.15/#ownerreference-v1-meta"
                    },
                    "type": "array",
                    "description": "List of objects depended by this object.\n Currently only populated for resources backed by Kubernetes"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Metadata contains the object metadata for this resource"
        }
    },
    "additionalProperties": false,
    "type": "object",
    "description": "Certain features such as the AWS Lambda option require the use of secrets for authentication, configuration of SSL Certificates, and other data that should not be stored in plaintext configuration.\n\nGloo runs an independent (goroutine) controller to monitor secrets. Secrets are stored in their own secret storage layer. Gloo can monitor secrets stored in the following secret storage services:\n\n- Kubernetes Secrets\n- Hashicorp Vault\n- Plaintext files (recommended only for testing)\n- Secrets must adhere to a structure, specified by the option that requires them.\n\nGloo's secret backend can be configured in Gloo's bootstrap options"
}