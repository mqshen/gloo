{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "providers": {
            "additionalProperties": {
                "properties": {
                    "jwks": {
                        "properties": {
                            "remote": {
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "description": "The url used when accessing the upstream for Json Web Key Set.\n This is used to set the host and path in the request"
                                    },
                                    "upstream_ref": {
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "namespace": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "The Upstream representing the Json Web Key Set server"
                                    },
                                    "cache_duration": {
                                        "properties": {
                                            "seconds": {
                                                "type": "string",
                                                "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                            },
                                            "nanos": {
                                                "type": "integer",
                                                "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "Duration after which the cached JWKS should be expired. \n If not specified, default cache duration is 5 minutes."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Use a remote JWKS server"
                            },
                            "local": {
                                "properties": {
                                    "key": {
                                        "type": "string",
                                        "description": "Inline key. this can be json web key, key-set or PEM format."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Use an inline JWKS"
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "The source for the keys to validate JWTs."
                    },
                    "audiences": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "description": "An incoming JWT must have an 'aud' claim and it must be in this list."
                    },
                    "issuer": {
                        "type": "string",
                        "description": "Issuer of the JWT. the 'iss' claim of the JWT must match this."
                    },
                    "token_source": {
                        "properties": {
                            "headers": {
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "properties": {
                                        "header": {
                                            "type": "string",
                                            "description": "The name of the header. for example, \"authorization\""
                                        },
                                        "prefix": {
                                            "type": "string",
                                            "description": "Prefix before the token. for example, \"Bearer \""
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Describes how to retrieve a JWT from a header"
                                },
                                "type": "array",
                                "description": "Try to retrieve token from these headers"
                            },
                            "query_params": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array",
                                "description": "Try to retrieve token from these query params"
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "Where to find the JWT of the current provider."
                    },
                    "keep_token": {
                        "type": "boolean",
                        "description": "Should the token forwarded upstream. if false, the header containing the token will be removed."
                    },
                    "claims_to_headers": {
                        "items": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "properties": {
                                "claim": {
                                    "type": "string",
                                    "description": "Claim name. for example, \"sub\""
                                },
                                "header": {
                                    "type": "string",
                                    "description": "The header the claim will be copied to. for example, \"x-sub\"."
                                },
                                "append": {
                                    "type": "boolean",
                                    "description": "If the header exists, append to it (true), or overwrite it (false)."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "description": "Allows copying verified claims to headers sent upstream"
                        },
                        "type": "array",
                        "description": "What claims should be copied to upstream headers."
                    }
                },
                "additionalProperties": true,
                "type": "object"
            },
            "type": "object",
            "description": "Auth providers can be used instead of the fields above where more than one is required.\n if this list is provided the fields above are ignored."
        },
        "allow_missing_or_failed_jwt": {
            "type": "boolean",
            "description": "Allow pass through of JWT requests for this virtual host, even if JWT token is missing or JWT auth failed.\n If this is false (default false), requests that fail JWT authentication will fail authorization immediately.\n For example, if a request requires either JWT auth OR another auth method, this can be enabled to allow a failed JWT auth request to pass through to the other auth method."
        }
    },
    "additionalProperties": false,
    "type": "object"
}