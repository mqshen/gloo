{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "request_headers_for_tags": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "description": "Optional. If specified, Envoy will include the headers and header values for any matching request headers."
        },
        "verbose": {
            "type": "boolean",
            "description": "Optional. If true, Envoy will include logs for streaming events. Default: false."
        },
        "trace_percentages": {
            "properties": {
                "client_sample_percentage": {
                    "additionalProperties": true,
                    "type": "number",
                    "description": "Percentage of requests that should produce traces when the `x-client-trace-id` header is provided.\n optional, defaults to 100.0\n This should be a value between 0.0 and 100.0, with up to 6 significant digits."
                },
                "random_sample_percentage": {
                    "additionalProperties": true,
                    "type": "number",
                    "description": "Percentage of requests that should produce traces by random sampling.\n optional, defaults to 100.0\n This should be a value between 0.0 and 100.0, with up to 6 significant digits."
                },
                "overall_sample_percentage": {
                    "additionalProperties": true,
                    "type": "number",
                    "description": "Overall percentage of requests that should produce traces.\n optional, defaults to 100.0\n This should be a value between 0.0 and 100.0, with up to 6 significant digits."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Requests can produce traces by random sampling or when the `x-client-trace-id` header is provided.\n TracePercentages defines the limits for random, forced, and overall tracing percentages."
        },
        "zipkin_config": {
            "properties": {
                "collector_upstream_ref": {
                    "$ref": "#/definitions/core.solo.io.ResourceRef",
                    "additionalProperties": true,
                    "description": "The upstream that hosts the Zipkin collectors."
                },
                "cluster_name": {
                    "type": "string",
                    "description": "The name of the cluster that hosts the Zipkin collectors. Note that the\n Zipkin cluster must be defined in the :ref:`Bootstrap static cluster\n resources \u003cenvoy_api_field_config.bootstrap.v3.Bootstrap.StaticResources.clusters\u003e`."
                },
                "collector_endpoint": {
                    "type": "string",
                    "description": "The API endpoint of the Zipkin service where the spans will be sent. When\n using a standard Zipkin installation, the API endpoint is typically\n /api/v1/spans, which is the default value."
                },
                "trace_id_128bit": {
                    "type": "boolean",
                    "description": "Determines whether a 128bit trace id will be used when creating a new\n trace instance. The default value is false, which will result in a 64 bit trace id being used."
                },
                "shared_span_context": {
                    "additionalProperties": true,
                    "type": "boolean",
                    "description": "Determines whether client and server spans will share the same span context.\n The default value is true."
                },
                "collector_endpoint_version": {
                    "enum": [
                        "DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE",
                        0,
                        "HTTP_JSON",
                        1,
                        "HTTP_PROTO",
                        2
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "description": "Determines the selected collector endpoint version. By default, the ``HTTP_JSON_V1`` will be\n used."
                }
            },
            "additionalProperties": true,
            "type": "object"
        },
        "datadog_config": {
            "properties": {
                "collector_upstream_ref": {
                    "$ref": "#/definitions/core.solo.io.ResourceRef",
                    "additionalProperties": true,
                    "description": "The upstream to use for submitting traces to the Datadog agent."
                },
                "cluster_name": {
                    "type": "string",
                    "description": "The name of the cluster to use for submitting traces to the Datadog agent. Note that the\n cluster must be defined in the :ref:`Bootstrap static cluster\n resources \u003cenvoy_api_field_config.bootstrap.v3.Bootstrap.StaticResources.clusters\u003e`."
                },
                "service_name": {
                    "type": "string",
                    "description": "The name used for the service when traces are generated by envoy."
                }
            },
            "additionalProperties": true,
            "type": "object"
        }
    },
    "additionalProperties": false,
    "type": "object",
    "description": "Contains settings for configuring Envoy's tracing capabilities at the listener level.\n See here for additional information on Envoy's tracing capabilities: https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/observability/tracing.html\n See here for additional information about configuring tracing with Gloo: https://gloo.solo.io/user_guides/setup_options/observability/#tracing",
    "definitions": {
        "core.solo.io.ResourceRef": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "A way to reference resources across namespaces",
            "id": "core.solo.io.ResourceRef"
        }
    }
}