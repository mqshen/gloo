{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "use_default_credentials": {
            "additionalProperties": true,
            "type": "boolean",
            "description": "Use AWS default credentials chain to get credentials.\n This will search environment variables, ECS metadata and instance metadata\n to get the credentials. credentials will be rotated automatically.\n\n If credentials are provided on the cluster (using the\n AWSLambdaProtocolExtension), it will override these credentials. This\n defaults to false, but may change in the future to true."
        },
        "service_account_credentials": {
            "properties": {
                "cluster": {
                    "type": "string",
                    "description": "The name of the envoy cluster which represents the desired aws sts endpoint"
                },
                "uri": {
                    "type": "string",
                    "description": "The full uri of the aws sts endpoint"
                },
                "timeout": {
                    "properties": {
                        "seconds": {
                            "type": "string",
                            "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                        },
                        "nanos": {
                            "type": "integer",
                            "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "timeout for the request"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Use projected service account token, and role arn to create temporary\n credentials with which to authenticate lambda requests.\n This functionality is meant to work along side EKS service account to IAM\n binding functionality as outlined here:\n https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html\n\n If the following environment values are not present, this option cannot be used.\n   1. AWS_WEB_IDENTITY_TOKEN_FILE\n   2. AWS_ROLE_ARN\n\n If they are not specified envoy will NACK the config update, which will show up in the logs when running OS Gloo.\n When running Gloo enterprise it will be reflected in the prometheus stat: \"glooe.solo.io/xds/nack\"\n\n The role arn may also be specified in the `AWSLambdaProtocolExtension` on the cluster level,\n to override the environment variable."
        }
    },
    "additionalProperties": false,
    "type": "object"
}