{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "status": {
            "$ref": "#/definitions/core.solo.io.Status",
            "additionalProperties": true,
            "description": "Status indicates the validation status of this resource.\n Status is read-only by clients, and set by gloo during validation"
        },
        "metadata": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the resource.\n\nNames must be unique and follow the following syntax rules:\n\nOne or more lowercase rfc1035/rfc1123 labels separated by '.' with a maximum length of 253 characters."
                },
                "namespace": {
                    "type": "string",
                    "description": "Namespace is used for the namespacing of resources."
                },
                "cluster": {
                    "type": "string",
                    "description": "Cluster indicates the cluster this resource belongs to\n Cluster is only applicable in certain contexts, e.g. Kubernetes\n An empty string here refers to the local cluster"
                },
                "resource_version": {
                    "type": "string",
                    "description": "An opaque value that represents the internal version of this object that can\n be used by clients to determine when objects have changed."
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "Map of string keys and values that can be used to organize and categorize\n (scope and select) objects. Some resources contain `selectors` which\n can be linked with other resources by their labels"
                },
                "annotations": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata."
                },
                "generation": {
                    "type": "string",
                    "description": "A sequence number representing a specific generation of the desired state.\n Currently only populated for resources backed by Kubernetes"
                },
                "owner_references": {
                    "items": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "properties": {
                            "api_version": {
                                "type": "string"
                            },
                            "block_owner_deletion": {
                                "additionalProperties": true,
                                "type": "boolean"
                            },
                            "controller": {
                                "additionalProperties": true,
                                "type": "boolean"
                            },
                            "kind": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "uid": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "description": "proto message representing kubernertes owner reference\n https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.15/#ownerreference-v1-meta"
                    },
                    "type": "array",
                    "description": "List of objects depended by this object.\n Currently only populated for resources backed by Kubernetes"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Metadata contains the object metadata for this resource"
        },
        "configs": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "name": {
                        "additionalProperties": true,
                        "type": "string",
                        "description": "optional: used when defining complex boolean logic, if `boolean_expr` is defined below. Also used\n in logging. If omitted, an automatically generated name will be used (e.g. config_0, of the\n pattern 'config_$INDEX_IN_CHAIN'). In the case of plugin auth, this field is ignored in favor of\n the name assigned on the plugin config itself."
                    },
                    "basic_auth": {
                        "properties": {
                            "realm": {
                                "type": "string"
                            },
                            "apr": {
                                "properties": {
                                    "users": {
                                        "additionalProperties": {
                                            "properties": {
                                                "salt": {
                                                    "type": "string"
                                                },
                                                "hashed_password": {
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": true,
                                            "type": "object"
                                        },
                                        "type": "object"
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object"
                            }
                        },
                        "additionalProperties": true,
                        "type": "object"
                    },
                    "oauth": {
                        "properties": {
                            "client_id": {
                                "type": "string",
                                "description": "your client id as registered with the issuer"
                            },
                            "client_secret_ref": {
                                "$ref": "#/definitions/core.solo.io.ResourceRef",
                                "additionalProperties": true,
                                "description": "your client secret as registered with the issuer"
                            },
                            "issuer_url": {
                                "type": "string",
                                "description": "The url of the issuer. We will look for OIDC information in issuerUrl+\n \".well-known/openid-configuration\""
                            },
                            "auth_endpoint_query_params": {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object",
                                "description": "extra query parameters to apply to the Ext-Auth service's authorization request to the identity provider."
                            },
                            "app_url": {
                                "type": "string",
                                "description": "we to redirect after successful auth, if we can't determine the original\n url this should be your publicly available app url."
                            },
                            "callback_path": {
                                "type": "string",
                                "description": "a callback path relative to app url that will be used for OIDC callbacks.\n needs to not be used by the application"
                            },
                            "scopes": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array",
                                "description": "Scopes to request in addition to openid scope."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object"
                    },
                    "oauth2": {
                        "properties": {
                            "oidc_authorization_code": {
                                "properties": {
                                    "client_id": {
                                        "type": "string",
                                        "description": "your client id as registered with the issuer"
                                    },
                                    "client_secret_ref": {
                                        "$ref": "#/definitions/core.solo.io.ResourceRef",
                                        "additionalProperties": true,
                                        "description": "your client secret as registered with the issuer"
                                    },
                                    "issuer_url": {
                                        "type": "string",
                                        "description": "The url of the issuer. We will look for OIDC information in issuerUrl+\n \".well-known/openid-configuration\""
                                    },
                                    "auth_endpoint_query_params": {
                                        "additionalProperties": {
                                            "type": "string"
                                        },
                                        "type": "object",
                                        "description": "extra query parameters to apply to the Ext-Auth service's authorization request to the identity provider."
                                    },
                                    "app_url": {
                                        "type": "string",
                                        "description": "we to redirect after successful auth, if we can't determine the original\n url this should be your publicly available app url."
                                    },
                                    "callback_path": {
                                        "type": "string",
                                        "description": "a callback path relative to app url that will be used for OIDC callbacks.\n should not be used by the application."
                                    },
                                    "logout_path": {
                                        "type": "string",
                                        "description": "a path relative to app url that will be used for logging out from an OIDC session.\n should not be used by the application.\n If not provided, logout functionality will be disabled."
                                    },
                                    "scopes": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "description": "Scopes to request in addition to openid scope."
                                    },
                                    "session": {
                                        "properties": {
                                            "fail_on_fetch_failure": {
                                                "type": "boolean",
                                                "description": "should we fail auth flow when failing to get a session from redis, or allow it to continue,\n potentially starting a new auth flow and setting a new session."
                                            },
                                            "cookie_options": {
                                                "properties": {
                                                    "max_age": {
                                                        "additionalProperties": true,
                                                        "type": "integer",
                                                        "description": "Max age for the cookie. Leave unset for a default of 30 days (2592000 seconds).\n To disable cookie expiry, set explicitly to 0."
                                                    },
                                                    "not_secure": {
                                                        "type": "boolean",
                                                        "description": "Use a non-secure cookie. Note - this should only be used for testing and in trusted \n environments."
                                                    },
                                                    "path": {
                                                        "additionalProperties": true,
                                                        "type": "string",
                                                        "description": "Path of the cookie. If unset, defaults to \"/\". Set it explicitly to \"\" to avoid setting a \n path."
                                                    },
                                                    "domain": {
                                                        "type": "string",
                                                        "description": "Cookie domain"
                                                    }
                                                },
                                                "additionalProperties": true,
                                                "type": "object",
                                                "description": "Set-Cookie options"
                                            },
                                            "cookie": {
                                                "additionalProperties": true,
                                                "type": "object",
                                                "description": "Set the tokens in the cookie itself. No need for server side state."
                                            },
                                            "redis": {
                                                "properties": {
                                                    "options": {
                                                        "properties": {
                                                            "host": {
                                                                "type": "string",
                                                                "description": "address of the redis. can be address:port or unix://path/to/unix.sock"
                                                            },
                                                            "db": {
                                                                "type": "integer",
                                                                "description": "db to use. can leave unset for db 0."
                                                            },
                                                            "pool_size": {
                                                                "type": "integer",
                                                                "description": "size of the connection pool. can leave unset for default.\n defaults to 10 connections per every CPU"
                                                            }
                                                        },
                                                        "additionalProperties": true,
                                                        "type": "object",
                                                        "description": "Options to connect to redis"
                                                    },
                                                    "key_prefix": {
                                                        "type": "string",
                                                        "description": "Key prefix inside redis"
                                                    },
                                                    "cookie_name": {
                                                        "type": "string",
                                                        "description": "Cookie name to set and store the session id. If empty the default \"__session\" is used."
                                                    },
                                                    "allow_refreshing": {
                                                        "additionalProperties": true,
                                                        "type": "boolean",
                                                        "description": "When set, refresh expired id-tokens using the refresh-token. Defaults to true.\n Explicitly set to false to disable refreshing."
                                                    }
                                                },
                                                "additionalProperties": true,
                                                "type": "object",
                                                "description": "Use redis to store the tokens and just store a random id in the cookie."
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "Configuration related to the user session."
                                    },
                                    "headers": {
                                        "properties": {
                                            "id_token_header": {
                                                "type": "string",
                                                "description": "If set, the id token will be forward upstream using this header name."
                                            },
                                            "access_token_header": {
                                                "type": "string",
                                                "description": "If set, the access token will be forward upstream using this header name."
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "Configures headers added to requests."
                                    },
                                    "discovery_override": {
                                        "properties": {
                                            "auth_endpoint": {
                                                "type": "string",
                                                "description": "url of the provider authorization endpoint"
                                            },
                                            "token_endpoint": {
                                                "type": "string",
                                                "description": "url of the provider token endpoint"
                                            },
                                            "jwks_uri": {
                                                "type": "string",
                                                "description": "url of the provider json web key set"
                                            },
                                            "scopes": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "list of scope values that the provider supports"
                                            },
                                            "response_types": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "list of response types that the provider supports"
                                            },
                                            "subjects": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "list of subject identifier types that the provider supports"
                                            },
                                            "id_token_algs": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "list of json web signature signing algorithms that the provider supports for encoding claims in a jwt"
                                            },
                                            "auth_methods": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "list of client authentication methods supported by the provider token endpoint"
                                            },
                                            "claims": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "list of claim types that the provider supports"
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "OIDC configuration is discovered at \u003cissuerUrl\u003e/.well-known/openid-configuration\n The discovery override defines any properties that should override this discovery configuration\n For example, the following AuthConfig CRD could be defined as:\n    ```yaml\n    apiVersion: enterprise.gloo.solo.io/v1\n    kind: AuthConfig\n    metadata:\n      name: google-oidc\n      namespace: gloo-system\n    spec:\n      configs:\n      - oauth:\n          app_url: http://localhost:8080\n          callback_path: /callback\n          client_id: $CLIENT_ID\n          client_secret_ref:\n            name: google\n            namespace: gloo-system\n          issuer_url: https://accounts.google.com\n          discovery_override:\n            token_endpoint: \"https://token.url/gettoken\"\n    ```\n\n And this will ensure that regardless of what value is discovered at\n \u003cissuerUrl\u003e/.well-known/openid-configuration, \"https://token.url/gettoken\" will be used as the token endpoint"
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "provide issuer location and let gloo handle OIDC flow for you.\n requests authorized by validating the contents of ID token.\n can also authorize the access token if configured."
                            },
                            "access_token_validation": {
                                "properties": {
                                    "introspection_url": {
                                        "type": "string",
                                        "description": "the url for the OAuth2.0 access token introspection endpoint.\n if provided, the (opaque) access token provided or received from the oauth authorization endpoint\n will be validated against this endpoint, or locally cached responses for this access token."
                                    },
                                    "userinfo_url": {
                                        "type": "string",
                                        "description": "the url for the OIDC userinfo endpoint.\n if provided, the (opaque) access token provided or received from the oauth endpoint\n will be queried and the userinfo response (or cached response) will be put in the `AuthorizationRequest` state.\n this can be useful to leverage the userinfo response in, for example, an extauth server plugin."
                                    },
                                    "cache_timeout": {
                                        "properties": {
                                            "seconds": {
                                                "type": "string",
                                                "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                            },
                                            "nanos": {
                                                "type": "integer",
                                                "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "how long the token introspection and userinfo endpoint response for a specific access token should be kept\n in the in-memory cache. the result will be invalidated at this timeout, or at \"exp\" time from the introspection\n result, whichever comes sooner. if omitted, defaults to 10 minutes. if zero, then no caching will be done."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "provide the access token on the request and let gloo handle authorization.\n\n according to https://tools.ietf.org/html/rfc6750 you can pass tokens through:\n - form-encoded body parameter. recommended, more likely to appear. e.g.: Authorization: Bearer mytoken123\n - URI query parameter e.g. access_token=mytoken123\n - and (preferably) secure cookies"
                            }
                        },
                        "additionalProperties": true,
                        "type": "object"
                    },
                    "api_key_auth": {
                        "properties": {
                            "label_selector": {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object",
                                "description": "Identify all valid API key secrets that match the provided label selector.\u003cbr/\u003e\n API key secrets must be in one of the watch namespaces for gloo to locate them."
                            },
                            "api_key_secret_refs": {
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "$ref": "#/definitions/core.solo.io.ResourceRef"
                                },
                                "type": "array",
                                "description": "A way to directly reference API key secrets. This configuration can be useful for testing,\n but in general the more flexible label selector should be preferred."
                            },
                            "header_name": {
                                "type": "string",
                                "description": "When receiving a request, the Gloo Enterprise external auth server will look for an API key in a header\n with this name. This field is optional; if not provided it defaults to `api-key`."
                            },
                            "headers_from_metadata": {
                                "additionalProperties": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "(Required) The key of the secret data entry to inspect."
                                        },
                                        "required": {
                                            "type": "boolean",
                                            "description": "If this field is set to `true`, Gloo will reject an API key secret that does not contain the given key.\n Defaults to `false`. In this case, if a secret does not contain the requested data, no header will be added\n to the request."
                                        }
                                    },
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "type": "object",
                                "description": "API key secrets might contain additional data (e.g. the ID of the user that the API key belongs to)\n in the form of extra keys included in the secret's `data` field.\n This configuration can be used to add this data to the headers of successfully authenticated requests.\n Each key in the map represents the name of header to be added; the corresponding value determines the key\n in the secret data that will be inspected to determine the value for the header."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object"
                    },
                    "plugin_auth": {
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the plugin"
                            },
                            "plugin_file_name": {
                                "type": "string",
                                "description": "Name of the compiled plugin file. If not specified, GlooE will look for an \".so\" file with same name as the plugin."
                            },
                            "exported_symbol_name": {
                                "type": "string",
                                "description": "Name of the exported symbol that implements the plugin interface in the plugin.\n If not specified, defaults to the name of the plugin"
                            },
                            "config": {
                                "properties": {
                                    "fields": {
                                        "additionalProperties": {
                                            "additionalProperties": true,
                                            "type": "object"
                                        },
                                        "type": "object",
                                        "description": "Unordered map of dynamically typed values."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object"
                            }
                        },
                        "additionalProperties": true,
                        "type": "object"
                    },
                    "opa_auth": {
                        "properties": {
                            "modules": {
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "$ref": "#/definitions/core.solo.io.ResourceRef"
                                },
                                "type": "array",
                                "description": "An optional resource reference to config maps containing modules to assist in the resolution of `query`."
                            },
                            "query": {
                                "type": "string",
                                "description": "The query that determines the auth decision. The result of this query must be either a boolean\n or an array with boolean as the first element. A boolean `true` value means that the request\n will be authorized. Any other value, or error, means that the request will be denied."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object"
                    },
                    "ldap": {
                        "properties": {
                            "address": {
                                "type": "string",
                                "description": "Address of the LDAP server to query. Should be in the form ADDRESS:PORT, e.g. `ldap.default.svc.cluster.local:389`."
                            },
                            "userDnTemplate": {
                                "type": "string",
                                "description": "Template to build user entry distinguished names (DN). This must contains a single occurrence of the \"%s\" placeholder.\n When processing a request, Gloo will substitute the name of the user (extracted from the auth header) for the\n placeholder and issue a search request with the resulting DN as baseDN (and 'base' search scope).\n E.g. \"uid=%s,ou=people,dc=solo,dc=io\""
                            },
                            "membershipAttributeName": {
                                "type": "string",
                                "description": "Case-insensitive name of the attribute that contains the names of the groups an entry is member of. Gloo will look\n for attributes with the given name to determine which groups the user entry belongs to. Defaults to 'memberOf' if not provided."
                            },
                            "allowedGroups": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array",
                                "description": "In order for the request to be authenticated, the membership attribute (e.g. *memberOf*) on the user entry must\n contain at least of one of the group DNs specified via this option.\n E.g. []string{ \"cn=managers,ou=groups,dc=solo,dc=io\", \"cn=developers,ou=groups,dc=solo,dc=io\" }"
                            },
                            "pool": {
                                "properties": {
                                    "maxSize": {
                                        "additionalProperties": true,
                                        "type": "integer",
                                        "description": "Maximum number connections that are pooled at any give time. The default value is 5."
                                    },
                                    "initialSize": {
                                        "additionalProperties": true,
                                        "type": "integer",
                                        "description": "Number of connections that the pool will be pre-populated with upon initialization. The default value is 2."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Use this property to tune the pool of connections to the LDAP server that Gloo maintains."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object"
                    },
                    "jwt": {
                        "additionalProperties": true,
                        "type": "object",
                        "description": "This is a \"dummy\" extauth service which can be used to support multiple auth mechanisms with JWT authentication.\n If Jwt authentication is to be used in the [boolean expression](https://docs.solo.io/gloo-edge/latest/reference/api/github.com/solo-io/gloo/projects/gloo/api/v1/enterprise/options/extauth/v1/extauth.proto.sk/#authconfig) in an AuthConfig, you can use this auth config type to include Jwt as an Auth config.\n In addition, `allow_missing_or_failed_jwt` must be set on the Virtual Host or Route that uses JWT auth or else the JWT filter will short circuit this behaviour."
                    },
                    "pass_through_auth": {
                        "properties": {
                            "grpc": {
                                "properties": {
                                    "address": {
                                        "type": "string",
                                        "description": "Address of the auth server to query. Should be in the form ADDRESS:PORT, e.g. `default.svc.cluster.local:389`."
                                    },
                                    "connection_timeout": {
                                        "properties": {
                                            "seconds": {
                                                "type": "string",
                                                "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                            },
                                            "nanos": {
                                                "type": "integer",
                                                "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "Timeout for the auth server to respond. Defaults to 5s"
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object"
                            }
                        },
                        "additionalProperties": true,
                        "type": "object"
                    }
                },
                "additionalProperties": false,
                "type": "object"
            },
            "type": "array",
            "description": "List of auth configs to be checked for requests on a route referencing this auth config,\n By default, every config must be authorized for the entire request to be authorized. This\n behavior can be changed by defining names for each config and defining `boolean_expr` below.\n\n State is shared between successful requests on the chain, i.e., the headers returned from each\n successful auth service get appended into the final auth response."
        },
        "boolean_expr": {
            "additionalProperties": true,
            "type": "string",
            "description": "How to handle processing of named configs within an auth config chain.\n An example config might be: `( basic1 || basic2 || (oidc1 \u0026\u0026 !oidc2) )`\n The boolean expression is evaluated left to right but honors parenthesis and short-circuiting."
        }
    },
    "additionalProperties": false,
    "type": "object",
    "description": "This is the user-facing auth configuration. When processed by Gloo, certain configuration types (i.a. oauth, opa)\n will be translated, e.g. to resolve resource references. See the `ExtAuthConfig.AuthConfig` for the final config\n format that will be included in the extauth snapshot.",
    "definitions": {
        "core.solo.io.ResourceRef": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "A way to reference resources across namespaces",
            "id": "core.solo.io.ResourceRef"
        },
        "core.solo.io.Status": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "state": {
                    "enum": [
                        "Pending",
                        0,
                        "Accepted",
                        1,
                        "Rejected",
                        2,
                        "Warning",
                        3
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "description": "State is the enum indicating the state of the resource"
                },
                "reason": {
                    "type": "string",
                    "description": "Reason is a description of the error for Rejected resources. If the resource is pending or accepted, this field will be empty"
                },
                "reported_by": {
                    "type": "string",
                    "description": "Reference to the reporter who wrote this status"
                },
                "subresource_statuses": {
                    "additionalProperties": {
                        "$ref": "#/definitions/core.solo.io.Status",
                        "additionalProperties": true
                    },
                    "type": "object",
                    "description": "Reference to statuses (by resource-ref string: \"Kind.Namespace.Name\") of subresources of the parent resource"
                },
                "details": {
                    "properties": {
                        "fields": {
                            "additionalProperties": {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "type": "object",
                            "description": "Unordered map of dynamically typed values."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "Opaque details about status results"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "*\n Status indicates whether a resource has been (in)validated by a reporter in the system.\n Statuses are meant to be read-only by users",
            "id": "core.solo.io.Status"
        }
    }
}